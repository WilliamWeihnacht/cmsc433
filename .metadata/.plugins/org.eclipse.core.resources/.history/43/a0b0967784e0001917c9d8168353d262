package cmsc433;

import java.util.List;
import java.util.concurrent.Semaphore;

/**
 * Customers are simulation actors that have two fields: a name, and a list
 * of Food items that constitute the Customer's order.  When running, an
 * customer attempts to enter the Ratsie's (only successful if the
 * Ratsie's has a free table), place its order, and then leave the
 * Ratsie's when the order is complete.
 */
public class Customer implements Runnable {
	//JUST ONE SET OF IDEAS ON HOW TO SET THINGS UP...
	private final String name;
	private final List<Food> order;
	private final int orderNum;    

	private static int runningCounter = 0;
	
	Semaphore sem = new Semaphore(Simulation.tables,true);

	/**
	 * You can feel free modify this constructor.  It must take at
	 * least the name and order but may take other parameters if you
	 * would find adding them useful.
	 */
	public Customer(String name, List<Food> order) {
		this.name = name;
		this.order = order;
		this.orderNum = ++runningCounter;
		
	}

	public String toString() {
		return name;
	}

	/** 
	 * This method defines what an Customer does: The customer attempts to
	 * enter the Ratsie's (only successful when the Ratsie's has a
	 * free table), place its order, and then leave the Ratsie's
	 * when the order is complete.
	 */
	public void run() {
		//YOUR CODE GOES HERE...

		
		Simulation.logEvent(SimulationEvent.customerStarting(this));

		/*
		// might be better to do this as an if/else?
		while (Simulation.opentables <= 0) {
			//TODO wait
			//wait();
		}
		*/
		

		//enter ratsie's
		Simulation.opentables--;
		Simulation.logEvent(SimulationEvent.customerEnteredRatsies(this));


		//place order
		synchronized(Simulation.orderLock) {
			Simulation.logEvent(SimulationEvent.customerPlacedOrder(this, order, orderNum));
			Simulation.orders.add(order);
		}

		//receive order TODO wait
		//wait();

		//leave
		Simulation.logEvent(SimulationEvent.customerLeavingRatsies(this));
		Simulation.opentables++;

	}
}
